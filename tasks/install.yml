---
- name: Install dependencies
  yum:
    name: jemalloc,jemalloc-devel,openssl-devel,centos-release-scl,scl-utils-build
    state: present

- name: Install devtoolset-8-toolchain
  yum:
    name: devtoolset-8-toolchain
    update_cache: yes
    state: present

- name: Create redis group
  group:
    name: redis
    state: present
    system: true

- name: Create redis user
  user:
    name: redis
    create_home: true
    home: /var/lib/redis
    group: redis
    shell: /sbin/nologin
    comment: Redis Server

- name: Check whether redis is already installed
  stat:
    path: /usr/local/bin/redis-server
  register: redis_stat

- name: Create files directory in playbook_dir
  file:
    path: "{{ playbook_dir }}/files"
    recurse: True
    state: directory
  become: False
  delegate_to: localhost
  run_once: True

- name: Downlaod redis package
  get_url:
    url: "{{ redis_download_url }}"
    dest: "{{ playbook_dir }}/files/{{ redis_download_url | basename }}"
  delegate_to: localhost
  become: false
  run_once: true
  when:
    - redis_upgrade or not redis_stat.stat.exists

- name: Unarchive redis-{{ redis_version }}
  unarchive:
    src: "files/{{ redis_download_url | basename }}"
    dest: /usr/local/src/
    remote_src: false
    creates: /usr/local/src/redis-{{ redis_version }}
  when:
    - redis_upgrade or not redis_stat.stat.exists

- name: Compile && install
  shell: scl enable devtoolset-8 "make -j BUILD_TLS=yes && make install BUILD_TLS=yes"
  args:
    chdir: /usr/local/src/redis-{{ redis_version }}
    removes: /usr/local/src/redis-{{ redis_version }}
  when:
    - redis_upgrade or not redis_stat.stat.exists
  async: 1000
  poll: 0
  register: compile_and_install
  notify:
    - restart redis

- name: Wait for compile/install complete
  async_status:
    jid: "{{ compile_and_install.ansible_job_id }}"
  register: compile_install_status
  until: compile_install_status.finished
  # delay: 5
  retries: 1000
  when:
    - compile_and_install is defined
    - compile_and_install is changed

- name: Generate /usr/local/libexec/redis-shutdown
  template:
    src: redis-shutdown.sh.j2
    dest: /usr/local/libexec/redis-shutdown
    owner: redis
    group: redis
    mode: 0700

- name: Startup redis multiple servers for systemd
  template:
    src: redis.service.j2
    dest: /usr/lib/systemd/system/redis@.service
  notify:
    - restart redis

- name: Ensure redis related directory exists
  file:
    path: "{{ item }}"
    state: directory
    owner: redis
    group: redis
  loop:
    - "{{ redis_data_dir }}"
    - /etc/redis/ssl/{{ redis_port }}
    - "{{ redis_log_dir }}"
    # - /var/run/redis
